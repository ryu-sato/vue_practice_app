version: 2.1

orbs:
  docker-orb: circleci/docker@0.5.19
  kube-orb: circleci/kubernetes@0.10.1

jobs:
  test:
    docker:
      - image: ruby:2.5.3

    steps:
      - checkout

      - run:
          name: Initialize
          environment:
            RAILS_ENV: test
            DISABLE_SPRING: 1
          command: |
            # install tools
            curl -sL https://deb.nodesource.com/setup_10.x | bash -
            apt-get install -y nodejs
            npm install yarn@1.13.0
            gem install bundler -v 1.17.3
            # initialize DB
            bundle install
            bundle exec rails db:migrate

      - run:
          name: Test
          command: bundle exec rails test

  docker_build_and_push:
    machine:
      image: ubuntu-1604:201903-01

    steps:
      - checkout

      - run:
          name: Initialize
          command: |
            GIT_HASH = $(git rev-parse HEAD)
            echo "export GIT_HASH=${GIT_HASH}" >> $BASH_ENV
            echo "export IMAGE_NAME=${DOCKER_HUB_USERNAME}/vue_practice_app:${GIT_HASH}" >> $BASH_ENV
            source $BASH_ENV

      - docker-orb/install-docker

      - run:
          name: docker login
          command: docker login -u ${DOCKER_HUB_USERNAME} -p ${DOCKER_HUB_PASSWORD}

      - docker-orb/build:
          image: $IMAGE_NAME
          tag: $GIT_HASH

      - docker-orb/push:
          image: $IMAGE_NAME

  deploy:
    machine:
      image: ubuntu-1604:201903-01

    steps:
      - checkout

      - run:
          name: Initialize
          command: |
            GIT_HASH = $(git rev-parse HEAD)
            echo "IMAGE_NAME=${DOCKER_HUB_USERNAME}/vue_practice_app:${GIT_HASH}" >> $BASH_ENV
            source $BASH_ENV

      - kube-orb/install-kubectl

      - kube-orb/install-kubeconfig

      - run:
          name: execute DB migration
          command: >
            kubectl run tmp-migrate -i --generator=run-pod/v1 --rm
              --image ${IMAGE_NAME}
              --overrides='{
                "spec":{
                  "containers":[{
                    "name":"app",
                    "image":"${IMAGE_NAME}",
                    "command":["bash"],
                    "args":["-c","rails db:migrate SECRET_KEY_BASE=$(rails secret)"],
                    "envFrom":[{"secretRef":{"name":"vue-practice"}}]
                  }]
                }
              }'

      - kube-orb/update-container-image:
          namespace: vue-practice
          resource-name: deployment/vue-practice
          container-image-updates: app=${IMAGE_NAME}
          record: true

      - kube-orb/get-rollout-status:
          namespace: vue-practice
          resource-name: deployment/vue-practice

workflows:
  ci:
    jobs:
      - test

  cd:
    jobs:
      # - test
      #     filters:
      #       branches:
      #         only: stable
      # - docker_build_and_push:
      #     requires:
      #       - test
      - docker_build_and_push
      - deploy:
          requires:
            - docker_build_and_push
